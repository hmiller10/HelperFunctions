# This is a basic workflow to help you get started with Actions
name: Publish_HelperFunctions_Module

# Controls when the workflow will run
on:
  push:
    branches: [main]

  workflow_dispatch:

jobs:
  publish-to-gallery:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.0
        with:
          repository: ${{ github.repository }}
          path: main
      
      - name: Install and cache PowerShell modules
        uses: potatoqualitee/psmodulecache@v6.0
        with:
          modules-to-cache: PSFramework,Pester::,HelperFunctions
          updatable: true
          shell: powershell
 
      - name: Show that the v5 Action works
        shell: powershell
        run: |
              Get-Module -Name PSFramework, Pester, HelperFunctions -ListAvailable | Select Path
              Import-Module -Name HelperFunctions -Force
              	
      - name: Show that the v7 Action works
        shell: pwsh
        run: |
              Get-Module -Name PSFramework, Pester, HelperFunctions -ListAvailable | Select Path
              Import-Module -Name HelperFunctions -Force

      - name: Test module
        run: |
             	if ((Get-CimInstance -ClassName CIM_ComputerSystem -NameSpace 'root\CIMv2').partOfDomain -eq $false)
			{
				$wkgrpConfig = New-PesterConfiguration
			    	$wkgrpConfig.Run.ExcludePath = (Join-Path ${{ github.workspace }} "main\Tests\Test-IsDomainGroupMember.Tests.ps1"
			    	$wkgrpConfig.Run.PassThru = $true
			    	$wkgrpConfig.Output = 'Detailed'
			    	$wkgrpConfig.Should.ErrorAction = 'Continue'

			    	Invoke-Pester  -Path (Join-Path ${{ github.workspace }} "main\Tests") -Configuration $wkgrpConfig
			else
			{
				$domainConfig = New-PesterConfiguration
			    	$domainConfig.Run.PassThru = $true
			    	$domainConfig.Output = 'Detailed'
			    	$domainConfig.Should.ErrorAction = 'Continue'

			    	Invoke-Pester  -Path (Join-Path ${{ github.workspace }} "main\Tests") -Configuration $domainConfig
			}
        shell: powershell

      - name: Publish to PowerShell Gallery
        env:
          DESCRIPTION: ${{ github.event.description }}
          PSGALLERY_KEY: ${{ secrets.HMILLER10_PSGALLERY_APIKEY }}
          BUILDVER: '2.7.7'
          
        run: |
          Publish-Module -Path (Join-Path ${{ github.workspace }} "main\Code") -NuGetApiKey $env:PSGALLERY_KEY -Repository PSGallery -RequiredVersion $env:BUILDVER -ErrorAction 'Continue'
        shell: powershell
